// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: issue312.proto

package issue312

import (
	fmt "fmt"
	_ "github.com/cockroachdb/gogoproto/gogoproto"
	proto "github.com/cockroachdb/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TaskState int32

const (
	TaskState_TASK_STAGING  TaskState = 6
	TaskState_TASK_STARTING TaskState = 0
	TaskState_TASK_RUNNING  TaskState = 1
)

var TaskState_name = map[int32]string{
	6: "TASK_STAGING",
	0: "TASK_STARTING",
	1: "TASK_RUNNING",
}

var TaskState_value = map[string]int32{
	"TASK_STAGING":  6,
	"TASK_STARTING": 0,
	"TASK_RUNNING":  1,
}

func (x TaskState) Enum() *TaskState {
	p := new(TaskState)
	*p = x
	return p
}

func (x TaskState) String() string {
	return proto.EnumName(TaskState_name, int32(x))
}

func (x *TaskState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TaskState_value, data, "TaskState")
	if err != nil {
		return err
	}
	*x = TaskState(value)
	return nil
}

func (TaskState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a64932ccacef062, []int{0}
}

func init() {
	proto.RegisterEnum("issue312.TaskState", TaskState_name, TaskState_value)
}

func init() { proto.RegisterFile("issue312.proto", fileDescriptor_8a64932ccacef062) }

var fileDescriptor_8a64932ccacef062 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x2c, 0x2e, 0x2e,
	0x4d, 0x35, 0x36, 0x34, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0xa5, 0x4c,
	0xd3, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x93, 0xf3, 0x93, 0xb3, 0x8b,
	0xf2, 0x13, 0x93, 0x33, 0x52, 0x92, 0xf4, 0xd3, 0xf3, 0xd3, 0xf3, 0xc1, 0x6a, 0xd1, 0x58, 0x10,
	0x03, 0xb4, 0x9c, 0xb8, 0x38, 0x43, 0x12, 0x8b, 0xb3, 0x83, 0x4b, 0x12, 0x4b, 0x52, 0x85, 0x04,
	0xb8, 0x78, 0x42, 0x1c, 0x83, 0xbd, 0xe3, 0x83, 0x43, 0x1c, 0xdd, 0x3d, 0xfd, 0xdc, 0x05, 0xd8,
	0x84, 0x04, 0xb9, 0x78, 0x61, 0x22, 0x41, 0x21, 0x20, 0x21, 0x06, 0xb8, 0xa2, 0xa0, 0x50, 0x3f,
	0x3f, 0x90, 0x08, 0xa3, 0x93, 0xd4, 0x87, 0x87, 0x72, 0x8c, 0x3f, 0x1e, 0xca, 0x31, 0xae, 0x78,
	0x24, 0xc7, 0xb8, 0xe3, 0x91, 0x1c, 0x63, 0x14, 0xdc, 0x59, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x49, 0x93, 0xf0, 0xcc, 0xb1, 0x00, 0x00, 0x00,
}
